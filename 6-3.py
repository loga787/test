# Задача 1. Бегать — это полезно
#
# Представим, что у нас далёкое будущее и мы можем заниматься спортом на планетах со странными перепадами температур.
# Спортсмен бегает по стадиону до тех пор, пока температура на улице больше 15 градусов. Он пробегает 20 метров,
# затем температура падает на два градуса, и, если уже в этот момент она стала меньше либо равна 15 градусам,
# спорт сразу заканчивается. Если же всё в порядке, то он проходит пешком ещё 10 метров. Затем всё это повторяется.
#
# Напишите программу, которая спрашивает у пользователя, сколько на улице градусов, и, исходя из погоды,
# считает количество пройденных по стадиону метров и выводит ответ на экран.
#
#
#

temperature = int(input("Введите температуру: "))
distance = 0
while temperature > 15:
    distance += 20
    temperature -= 2
    if temperature <= 15:
        break
    distance += 10

print(distance)

# Задача 2. Расшифровка кода
#
# Нам нужно расшифровать определённый код в виде одного большого числа. Для этого нужно посчитать сумму цифр справа налево.
# Если мы встречаем в числе цифру 5, то выводим сообщение «Обнаружен разрыв» и заканчиваем считать сумму.
# В конце программы на экран выводится сумма тех цифр, которые мы взяли.
#
#
#

numbers = int(input("Введите число: "))
summ_of_numbers = 0
while numbers != 0:
    last_number = numbers % 10
    if last_number == 5:
        print("Обнаружен разрыв")
        break
    summ_of_numbers += last_number
    numbers //= 10

print(summ_of_numbers)


# Задача 3. Реставрация книг
# На летней практике в библиотеке школьникам дают возможность помочь сохранить редкие и старинные книги: многие из них, особенно те, что содержат иллюстрации, со временем повреждаются. Библиотека решила поручить школьникам важную задачу — найти такие книги и передать их библиотекарю для реставрации.
# Каждому ученику нужно найти пять книг, которые требуют восстановления. Поскольку количество доступных для проверки книг в день ограничено, не всегда удастся завершить отработку за один день, и ученикам, возможно, придётся продолжить проверку на следующий.
# Напишите программу, которая будет помогать отслеживать количество найденных книг для реставрации. Библиотекарь выдаёт ученику некоторое количество книг для проверки. Программа запрашивает у ученика, сколько книг он посмотрел и сколько из них требует реставрации. Если ученик нашёл пять книг, программа выводит сообщение о завершении практики. Если цель ученика не выполнена, программа сообщает, что придётся прийти на практику ещё раз.

# Пример 1:
# Сколько книг выдал библиотекарь? 10
# Сколько книг просмотрено? 2
# Сколько из них требует реставрации? 1
# Сколько книг просмотрено? 6
# Сколько из них требует реставрации? 3
# Сколько книг просмотрено? 2
# Сколько из них требует реставрации? 1

# Библиотекарь: На сегодня всё. Благодарю за помощь!
# Ура! Практика завершена!

# Пример 2:
# Сколько книг выдал библиотекарь? 5
# Сколько книг просмотрено? 2
# Сколько из них требует реставрации? 0
# Сколько книг просмотрено? 2
# Сколько из них требует реставрации? 2
# Сколько книг просмотрено? 1
# Сколько из них требует реставрации? 1
# Библиотекарь: На сегодня всё. Благодарю за помощь!
# Цель практики ещё не достигнута — встретимся завтра.

total_book = int(input("Сколько книг выдал библиотекарь? "))
count_damaged_books = 0

while count_damaged_books != 5:
    books_viewed = int(input("Сколько книг просмотрел? "))
    total_book -= books_viewed

    damaged_books = int(input("Сколько из них было испорчено? "))
    count_damaged_books += damaged_books

    if total_book <= 0:
        print("Библиотекарь: На сегодня всё. Благодарю за помощь!")
        break

if count_damaged_books < 5:
    print("Цель практики ещё не достигнута — встретимся завтра.")
else:
    print("Ура! Практика завершена!")


# Задача 4. Ставки приняты, ставок больше нет
#
# Костя опять за старое! Только теперь он играет в кубики более надёжно, то есть на какую-то фиксированную сумму.
# И при этом пока что постоянно выигрывает! Однако по правилам это не мешает ему проиграть сразу всё.
#
# Напишите программу, которая запрашивает у пользователя начальное количество денег и, пока оно меньше 10 000,
# запрашивает число, которое выпало на кубике (от 1 до 6). Если на кубике выпало 3, то выводится сообщение «Вы проиграли всё!»,
# и деньги обнуляются. Если выпало другое число, к сумме прибавляется 500.
#
#
#
# Пример:
#
# Введите стартовую сумму: 5000
#
# Сколько выпало на кубике? 4
#
# Выиграли 500 рублей!
#
# Сколько выпало на кубике? 5
#
# Выиграли 500 рублей!
#
# Сколько выпало на кубике? 3
#
# Вы проиграли всё!
#
# Игра закончена.
#
# Итого осталось: 0 рублей
#
#
#
# Пример 2:
#
# Введите стартовую сумму: 9700
#
# Сколько выпало на кубике? 4
#
# Выиграли 500 рублей!
#
# Игра закончена.
#
# Итого осталось: 10200 рублей

start_money = int(input("Введите стартовую сумму: "))

while start_money < 10000:
    random_cube = int(input("Сколько выпало на кубике? "))
    if random_cube == 3:
        print("Вы проиграли всё!")
        start_money = 0
        break
    start_money += 500
    print("Выиграли 500 рублей!")

print("Игра закончена.\nИтого осталось:", start_money)
# \n - символ перехода на новую строку, его можно использовать чтобы перенести часть строки на новую строку при выводе в консоль.
